<!DOCTYPE html>
<html lang="en-US"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Assignment Details</title>

<link rel="stylesheet" href="instructions_arquivos/bootstrap.css">
<link rel="stylesheet" href="instructions_arquivos/main_002.css">
<link rel="stylesheet" href="instructions_arquivos/main.css">
<link rel="stylesheet" href="instructions_arquivos/font-awesome.css">
<script src="instructions_arquivos/ga.js" async="" type="text/javascript"></script><script type="text/javascript" src="instructions_arquivos/jquery.js"></script>
<script type="text/javascript" src="instructions_arquivos/json.js"></script>
<script type="text/javascript" src="instructions_arquivos/hc_fix.js"></script>
<script src="instructions_arquivos/bootstrap-modal.js" type="text/javascript"></script>
<script src="instructions_arquivos/modal_focus.js" type="text/javascript"></script>
<script src="instructions_arquivos/bind_modal_focus.js" type="text/javascript"></script>
<script src="instructions_arquivos/MathJax.js"></script>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28377374-1']);
  _gaq.push(['_setDomainName', 'coursera.org']);
  _gaq.push(['_setAllowLinker', true]);  
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script><link rel="icon" href="https://spark-public.s3.amazonaws.com/nlp/static/images/favicon.ico">

<style type="text/css">#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style></head>

<body><div style="display: none;" id="MathJax_Message"></div>

    <a href="#page-content" class="hidden">Skip Navigation</a>

	
<div class="topbar">
    <div class="topbar-inner">
        <div class="container-fluid">
            <a target="_new" href="http://www.coursera.org/" class="brand">
				Coursera				<span style="background-color:#387690;padding-top:100px" class="label warning">Beta</span>
			</a>
            <ul class="nav secondary-nav">
                                                    <li style="padding: 10px 10px 11px; color:#BFBFBF; font-size:14px; border-right: solid 1px #333">Rafael Reis</li>
                    <li><a href="https://www.coursera.org/nlp/class/preferences">Preferences</a></li>
                    <li><a href="http://www.coursera.org/">All Courses</a></li>

                                        
                    
                    <li><a href="https://www.coursera.org/nlp/class/aboutus">About</a></li>
                    <li><a href="https://www.coursera.org/nlp/auth/feedback">Contact Us</a></li>
                    <li><a href="https://www.coursera.org/nlp/auth/logout">Logout</a></li>
                            </ul>
        </div>
    </div>
</div>


    <div id="banner-top">
    	<div id="course-logo-text">
        	<a href="https://www.coursera.org/nlp/class/index">
        		<img alt="Natural Language Processing" src="instructions_arquivos/course-logo-text.png" border="0">
        	</a>
        </div>
    	<div id="banner-course-info">
        	<div class="course-instructor-name">Dan Jurafsky, <span style="font-weight:normal">Professor of Linguistics</span><br>
Chris Manning, <span style="font-weight:normal">Associate Professor  of Computer Science</span></div>
            <div class="course-time"></div>
        </div>
    </div>
    
        <div class="container-fluid">
        <div class="sidebar page-sidebar" id="page-sidebar">
            <ul style="list-style-type:none;margin-left:0px;">
		<li>
        <a href="https://www.coursera.org/nlp/class/index">
            <p class="navbar_item navbar_home">Home            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/wiki/view?page=syllabus">
            <p class="navbar_item navbar_wiki">Syllabus            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/wiki/view?page=courselogistics">
            <p class="navbar_item navbar_wiki">Course Logistics            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/wiki/view?page=FAQlist">
            <p class="navbar_item navbar_wiki">FAQ List            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/">
            <p class="navbar_item navbar_">            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/quiz/index">
            <p class="navbar_item navbar_quiz">Problem Sets            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/assignment/index">
            <p class="navbar_item navbar_assignment">Programming Assignments            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/lecture/index">
            <p class="navbar_item navbar_lecture">Video Lectures            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/wiki/view?page=lectureslides">
            <p class="navbar_item navbar_lecture">Lecture Slides            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/forum/index">
            <p class="navbar_item navbar_forum">Discussion Forums            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/">
            <p class="navbar_item navbar_">            </p>
        </a>
    </li>
		<li>
        <a href="https://www.coursera.org/nlp/wiki/view?page=aboutus">
            <p class="navbar_item navbar_wiki">About Us            </p>
        </a>
    </li>
	</ul>
        </div>
        <div class="content page-content" id="page-content">
            <h2>PA1 Spamlord â€” View Assignment</h2>

<table style="margin-top: 10px;">
	<tbody>
        <tr>
			<th style="width: 240px;">Assignment Name</th>
			<td>PA1 Spamlord</td>
		</tr>
		<tr>
			<th>Due Date</th>
			<td>Tue 27 Mar 2012 11:59:00 PM PDT</td>
		</tr>
		<tr>
			<th>Hard Deadline</th>
			<td>Fri 11 May 2012 11:59:00 PM PDT</td>
		</tr>
		<tr>
			<th>Submission</th>
			<td>Go to <a href="https://www.coursera.org/nlp/assignment/list">Assignments List</a> page to submit your solutions.</td>
		</tr>
		<tr>
			<th>Instructions</th>
			<td><h3>Homework 1: Spamlord <a href="http://spark-public.s3.amazonaws.com/nlp/homework/pa1-spamlord-v3.tar.gz">[starter code]</a></h3>
<h4>Harvesting emails and phone numbers</h4>


<table bgcolor="#217292" border="0" cellpadding="3" width="100%">
<tbody><tr>
<td><b><font color="#FFFFFF"><font size="+1">Due: Tuesday March 20 11:59pm Pacific Daylight Time</font></font></b></td>
</tr>
</tbody></table>


<p>
Here's your chance to be a SpamLord! Yes, you too can build regexes to help spread evil throughout the galaxy! 

</p><p>
More specifically, your  goal in this assignment is to write regular expressions that
extract phone numbers and regular expressions that extract email addresses.

</p><p>
To start with a trivial example, given
</p><pre>jurafsky@stanford.edu
</pre>
your job is to return
<pre>jurafsky@stanford.edu
</pre>
<p>
But you also need to deal with more complex examples
created by people trying to shield their addresses,
such as the following types of examples that I'm sure you've all seen:
</p><pre>jurafsky(at)cs.stanford.edu
jurafsky at csli dot stanford dot edu
</pre>
<p> You should even handle examples that look like the following (as it appears on your screen; 
we've used metachars on this page to make it display properly):
</p><pre><code> &lt;script type="text/javascript"&gt;obfuscate('stanford.edu','jurafsky')&lt;/script&gt; </code>
</pre>
For all of the above you should return the corresponding email address
<pre>jurafsky@stanford.edu OR jurafsky@cs.stanford.edu OR jurafsky@csli.stanford.edu
</pre>
as appropriate.

<p>
Similarly, for phone numbers, you need to handle examples like the following:

</p><pre>TEL +1-650-723-0293
Phone:  (650) 723-0293
Tel (+1): 650-723-0293
<code>&lt;a href="contact.html"&gt;TEL&lt;/a&gt; +1&amp;thinsp;650&amp;thinsp;723&amp;thinsp;0293</code>
</pre>
all of which should return the following canonical form:
<pre>650-723-0293
</pre>
(you can assume all phone numbers we give you will be inside North America).

<p>
In order to make it easier for you to do this and other homeworks, we 
will be giving you some data to test your code on, what is technically called a <i>development test set</i>.
This is a document with some emails and phone numbers, together with the correct answers, so that you can
make sure your code extracts  all and only the right information.

</p><p>
You will be graded on how well your regular expressions find emails and phone numbers
in a different <i>test set</i> that we have.  Because you don't know exactly what trickery goes on in
this test set, you should be creative in looking at the web and thinking of different types 
of ways of encoding emails and phone numbers, and not just rely on the methods we've listed here,
or are listed in the homework.
</p><p>
<b>You won't have to deal with:</b> really difficult examples
like images  of any kind, or examples that require parsing names into first/last like:
</p><pre> "first name"@cs.stanford.edu 
</pre>
or difficult examples like our friend <a href="http://www.cs.colorado.edu/%7Emartin/">Jim Martin</a>, whose email was listed only as:
<pre>To send me email, try the simplest address that makes sense.
</pre>


<h4>Where can I find the starter code?</h4>
<p>
As for all assignments in this class, you may use either Java, python. 
We have provided starter code written in both languages with the 
following directory structure (the actual link is at the top of the 
page) :

</p><pre>hw1/
  data/
    dev/ # The development set
      aiken
      ashishg
      ...
    devGold # What we think are the right answers (If you see something we don't, let us know!)
  java/
    SpamLord.java # java starter code
    Submit.java # java submission code
    Base64.java # a dependency for the submission code
  python/
    SpamLord.py # python starter code
    submit.py # python submission code
</pre>

<p>By default, if you execute:

</p><pre>$cd java
$mkdir classes
$javac -d classes *.java
$java -cp classes SpamLord ../data/dev/ ../data/devGOLD
</pre>

or

<pre>$cd python
$python SpamLord.py ../data/dev/ ../data/devGOLD
</pre>

It will run your code on the files contained in data/dev/ and compare 
the results of a simple regular expression against the correct results. 
 The results will look something like this:
<pre>True Positives (4)	###############################
balaji	e	balaji@stanford.edu
nass	e	nass@stanford.edu
shoham	e	shoham@stanford.edu
thm	e	pkrokel@stanford.edu
False Positives (1)	###############################
psyoung	e	young@stanford.edu
False Negatives (110)	###############################
ashishg	e	ashishg@stanford.edu
ashishg	e	rozm@stanford.edu
ashishg	p	650-723-1614
...
</pre>
The true positive section displays e-mails and phone numbers which the 
starter code correctly matches, the false positive section displays 
e-mails which the starter code regular expressions match but which are 
not correct, and the false negative section displays e-mails and phone 
numbers which the starter code did not match, but which do exist in the 
html files. Your goal, then, is to reduce the number of false positives 
and negatives to zero.
<br>
<br>
UPDATE:<br>
We've been informed of some new real e-mails which were not included in 
the original copy of the devGOLD file (pa1-spamlord-v1.tar.gz).  The new
 e-mails are:
<pre>ouster	e	ouster@cs.stanford.edu
engler	e	engler@stanford.edu
</pre>
They have been added to the new devGOLD file (pa1-spamlord-v2.tar.gz).  
The grading policy for this will be as generous as possible: if you find
 the new e-mail and submit it as a guess, we will not count it as a 
false positive, but if you don't find the new e-mail (because you did 
the assignment with the pa1-spamlord-v1 version) we won't penalize you 
for the false negative.

<h4>Where should I write my Java code?</h4>
The function 
<pre>public List<contact> processFile(String fileName, BufferedReader input) {</contact></pre>
has been flagged for you with the universal "TODO" marker.  This 
function takes in a file and a file name and returns a list of Contact 
objects which it found in that file.  The Contact object is just a 
simple class which encapsulates the filename, the type ("e" for e-mail, 
or "p" for phone), and the actual value of the e-mail or phone number.  
Here is its declaration and data members:
<pre>class Contact implements Comparable<contact>{
    String fileName;
    String type;
    String value;
    ...
</contact></pre>

Your job is to build a system of regular expressions which output as many correct Contact objects as possible.

<h4>Where should I write my Python code?</h4>
The function
<pre>def process_file(name, f):</pre>
has been flagged for you with the universal "TODO" marker. This function
 takes in a file object (or any iterable of strings) and returns a list 
of tuples representing e-mails or phone numbers found in that file.  
Specifically the tuple has the format:
<pre>(filename, type, value)
</pre>
where type is either 'e', for e-mail, or 'p' for phone number, and value is just the actual e-mail or phone number.

<h4>What format should the my phone numbers and e-mail have?</h4>
The canonical forms we expect are: 
<pre>user@example.com
650-555-1234
</pre>
The case of the e-mails you find should not matter because the starter 
code and the grading code will
lowercase your matched e-mails before comparing them against the gold 
set.  (Note that this is only true for a revised version
of the starter code released 1-11-12 at 11:59.  Prior this revision the 
starter code did not lowercase e-mails, though it will not effect the 
grading.)
<p></p>

<h4>How do I turn in my work?</h4>
For each language, we have provided a submission script/program which 
will run your program and capture the e-mails and phones numbers that it
 finds.  This data will then be sent to our servers where it will be 
stored and graded once the assignment is due.  For each language, the 
submission program will programmatically call your script and then 
prompt you for your username and a password.  The password can be found 
at the top of the Assignments page on this website.  It will also ask 
you about which parts of the assignment you wish to submit.  For this 
assignment your system will be evaluated in two parts: on an unseen test
 set, and on the development set, which is just the contents of the <code>dev</code> directory.  Here are the basic shell commands which you will need to execute for Java:
<pre>$ cd java
$ mkdir classes
$ javac -d classes *.java
$ java -cp classes Submit
</pre>

and for Python
<pre>$cd python
$python submit.py
</pre>

It is important that these scripts be executed from either the java or 
python directories so that they can easily import the code you've 
written and so that the relative path "../data/dev" correctly points to 
the development data (it is hard-coded into the submission scripts). 
Also, make sure that the files in "../data/dev" are the original version
 we distributed when you actually submit.  If your program finds any new
 contact info it will be counted as a false positive by the grader.  If 
you want to try you own test cases, just make a copy of the assignment.
</td>
		</tr>
	</tbody>
</table>
        </div>
    </div>
            <div class="hidden">
        This page features MathJax technology to render mathematical formulae.
        If you are using a screen reader, please visit <a href="http://www.dessci.com/en/products/mathplayer/">MathPlayer</a> to download the plugin for your browser. Please note that this is an Internet Explorer-only plugin at this time.
    </div>



</body></html>